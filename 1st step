local yourkey = "Can't find game"  
--Put game here
if game.PlaceId == 7622046644 then
  yourkey = "Monster Ghoul" 
end
--check game
  function Gamescript()
      --put script here
    loadstring(game:HttpGet("https://raw.githubusercontent.com/twotro/CupWare/main/"..game.PlaceId..".lua"))();
   end
--dev zone
local nothwid = " Not blacklisted"
--Put all your game name here
local Key = {"Monster Ghoul",
    "",
}
--blacklisthwid
local HWIDD = {"",
    "",
}
if table.find(Key, tostring(yourkey)) then
    print("Checking game")
    wait(0.5)
    print("Done")
    wait(0.5)
    print("Checking Status")
    wait(0.5)
    if HWIDD[table.find(HWIDD,game:GetService("RbxAnalyticsService"):GetClientId())] == game:GetService("RbxAnalyticsService"):GetClientId() then
        print("Done")
        wait(0.5)
        nothwid = "Blacklisted"
        wait(0.25)
        game.Players.LocalPlayer:Kick("You are not allow to use the script")
    else
        wait(0.5)
        print("Done")
        wait(0.5)
        --Put script here
        Gamescript()
    end
else
    print("Checking game")
    wait(0.5)
    print("Can't find game")
end
--Webhook

if table.find(Key, tostring(yourkey)) then
local webhookhwidcheck = (game:GetService("RbxAnalyticsService"):GetClientId())
local webhookkeycheck = yourkey

local url =
   "https://discord.com/api/webhooks/985771611066077225/RJEjNLrtJbxTX3VNCL79KwN1cEZjmNurIJMnlIwG7O8Pzos-lxGm8iDXhOBJ2xEkKq2G"
local data = {
   ["content"] = "",
   ["embeds"] = {
       {
           ["title"] = "**".. game.Players.LocalPlayer.Name.." Executed Cupware!**",
           ["description"] = "**HWID: ** ```\n"..webhookhwidcheck.."``` ** Game:**```\n" ..webhookkeycheck.."``` **Blacklist or Not**```\n"..nothwid.."```",
           ["type"] = "rich",
           ["color"] = tonumber(0x7269da),
           ["image"] = {
               ["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
                   tostring(game:GetService("Players").LocalPlayer.Name)
           }
       }
   }
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
   ["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)
end
